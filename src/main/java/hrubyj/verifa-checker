package com.verifa.checker.reports;

import com.verifa.checker.domain.LibrariesClassification;
import com.verifa.jacc.ccu.utils.BrokenPromisesCSMRClassification;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;

public class StatsPrinter {

    /**
     * Prints primitive statistics into a file.
     *
     * @param reportData data from html report
     */
    public void printStats(Map<String, Object> reportData) {
        String reportName = (String) reportData.get("reportName");
        File txtReport = new File(reportName + ".txt");
        LibrariesClassification libClass = (LibrariesClassification) reportData.get("libClass");
        BrokenPromisesCSMRClassification csmrClassification = (BrokenPromisesCSMRClassification) reportData.get("problemsClassification");
        try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(txtReport))) {
            bufferedWriter.write("incompatible;" + libClass.getNumberIncompatible() + "\n");
            bufferedWriter.write("redundant;" + libClass.getNumberRedundant() + "\n");
            bufferedWriter.write("must remove;" + libClass.getNumberMustRemove() + "\n");
            bufferedWriter.write("compatible;" + libClass.getNumberCompatible() + "\n");
            bufferedWriter.write("C1;" + csmrClassification.getC1() + "\n");
            bufferedWriter.write("C2;" + csmrClassification.getC2() + "\n");
            bufferedWriter.write("C3;" + csmrClassification.getC3() + "\n");
            bufferedWriter.write("M1;" + csmrClassification.getM1() + "\n");
            bufferedWriter.write("M2;" + csmrClassification.getM2() + "\n");
            bufferedWriter.write("F1;" + csmrClassification.getF1() + "\n");
            bufferedWriter.write("F2;" + csmrClassification.getF2() + "\n");
            bufferedWriter.write("MOD;" + csmrClassification.getMod() + "\n");
            bufferedWriter.write("M.M1;" + csmrClassification.getMm1() + "\n");
            bufferedWriter.write("F7;" + csmrClassification.getF7() + "\n");
            bufferedWriter.flush();
        } catch (IOException e) {
            System.out.println("Error printing stats! " + e);
        }

    }


}